---
openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Swagger Petstore"
  license:
    name: "MIT"
servers:
- url: "http://petstore.swagger.io/v1"
paths:
  /users:
    get:
      summary: "List all user"
      operationId: "listUsers"
      tags:
      - "users"
      parameters:
      - name: "limit"
        in: "query"
        description: "How many items to return at one time (max 100)"
        required: false
        schema:
          type: "integer"
          format: "int32"
      security:
      - petstore_auth:
        - "read:pets"
      responses:
        "200":
          description: "An paged array of users"
          headers:
            x-next:
              description: "A link to the next page of responses"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/User"
              example:
              - id: 1
                userName: "aaaaa"
                firstName: "AAA"
                lastName: "BBB"
                password: "111111"
                phone : "111222"
                status : 1
              - id: 1
                userName: "bbbb"
                firstName: "bb bb"
                lastName: "cccc"
                password: "222222"
                phone: "3331222"
                status: 0
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user:
    post:
      summary: "Create a user"
      operationId: "createUser"
      requestBody:
        description: "User to add to the store"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      tags:
        - "user"
      security:
        - petstore_auth:
            - "read:user"
            - "write:user"
      responses:
        "201":
          description: "Null response"
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
                  summary: "Update a user"
                  operationId: "createUser"
                  requestBody:
                    description: "User to update to the store"
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: "#/components/schemas/User"
                  tags:
                    - "user"
                  security:
                    - petstore_auth:
                        - "read:user"
                        - "write:user"
                  responses:
                    "201":
                      description: "Null response"
                    default:
                      description: "unexpected error"
                      content:
                        application/json:
                          schema:
                            $ref: "#/components/schemas/Error"
  /user/{userId}:
    get:
      summary: "Info for a specific User"
      operationId: "showUserById"
      tags:
      - "user"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        description: "The id of the user to retrieve"
        schema:
          type: "string"
      security:
      - petstore_auth:
        - "read:user"
      responses:
        "200":
          description: "Expected response to a valid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                response:
                  value:
                    id: 1
                    userName: "bbbb"
                    firstName: "bbbb"
                    lastName: "cccc"
                    password: "222222"
                    phone: "3331222"
                    userStatus: 0
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: "Delete a specific pet"
      operationId: "deleteUserById"
      tags:
      - "user"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        description: "The id of the user to delete"
        schema:
          type: "string"
#      - name: "key"
#        in: "header"
#        required: true
#        description: "The key header"
#        schema:
#          type: "string"
      security:
      - petstore_auth:
        - "write:user"
      responses:
        "200":
          description: "Expected response to a valid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
              examples:
                response:
                  value:
                    id: 1
                    userName: "bbbb"
                    firstName: "bbbb"
                    lastName: "cccc"
                    password: "222222"
                    phone: "3331222"
                    userStatus: 0
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/userName/{userName}:
    get:
      summary: "Info for a specific User"
      operationId: "showUserById"
      tags:
        - "user"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          description: "The id of the user to retrieve"
          schema:
            type: "string"
      security:
        - petstore_auth:
            - "read:user"
      responses:
        "200":
          description: "Expected response to a valid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                response:
                  value:
                    id: 1
                    userName: "bbbb"
                    firstName: "bbbb"
                    lastName: "cccc"
                    password: "222222"
                    phone: "3331222"
                    userStatus: 0
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    petstore_auth:
      type: "oauth2"
      description: "This API uses OAuth 2 with the client credential grant flow."
      flows:
        clientCredentials:
          tokenUrl: "https://localhost:6882/token"
          scopes:
            write:pets: "modify pets in your account"
            read:pets: "read your order"
  schemas:
    User:
      type: "object"
      required:
      - "id"
      - "userName"
      - "firstName"
      - "lastName"
      - "password"
      - "phone"
      - "userStatus"
      properties:
        id:
          type: "integer"
          format: "int64"
        userName:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type : "string"
        password:
          type: "string"
        phone:
          type: "string"
        userStatus:
          type: "integer"
          format: "int64"
    Error:
      type: "object"
      required:
      - "code"
      - "message"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
